variables:
  R_LIBS_SITE: '/usr/share/R/library'
  R_LIBS_USER: '$(Agent.BuildDirectory)/R/library'

trigger:
  branches:
    include:
      - master
  batch: true

pool:
  vmImage: 'Ubuntu-latest'

container: fedora:latest

steps:
- bash: |
    sudo dnf -y install devscripts-checkbashisms langpacks-en R
  displayName: "Install R"

- bash: |
    cd
    echo 'options(repos = "https://cloud.r-project.org")' > .Rprofile
    echo 'invisible(Sys.setlocale("LC_CTYPE", "en_US.UTF-8"))' >> .Rprofile
    echo 'invisible(Sys.setlocale("LC_TIME", "en_US.UTF-8"))' >> .Rprofile
    echo 'invisible(Sys.setlocale("LC_COLLATE", "en_US.UTF-8"))' >> .Rprofile
    echo 'invisible(Sys.setlocale("LC_MONETARY", "en_US.UTF-8"))' >> .Rprofile
    echo 'invisible(Sys.setlocale("LC_MESSAGES", "en_US.UTF-8"))' >> .Rprofile
    echo 'invisible(Sys.setlocale("LC_PAPER", "en_US.UTF-8"))' >> .Rprofile
    echo 'invisible(Sys.setlocale("LC_MEASUREMENT", "en_US.UTF-8"))' >> .Rprofile
    echo 'R_LIBS_SITE="/usr/share/R/library"' > .Renviron
    echo 'R_LIBS_USER="$(Agent.BuildDirectory)/R/library"' >> .Renviron
    mkdir -p $(Agent.BuildDirectory)/R/library
  displayName: "Customize R startup"

- bash: |
    Rscript -e "R.version"
  displayName: 'Confirm R version'

- bash: |
    sudo dnf -y install \
      ImageMagick-c++-devel \
      R-git2r \
      R-ggplot2 \
      R-hunspell \
      R-pdftools \
      R-qpdf \
      R-RColorBrewer \
      R-sp \
      R-xml2
    Rscript -e "install.packages('magick')"
  displayName: 'Install package dependencies'

# This builds the package. The package is checked out to the 's' folder,
# and that is why we can use 's' and not the name of the package.
- bash: |
    cd ..
    R CMD build s
  displayName: 'Build package'

- bash: |
    cd ..
    _R_CHECK_CRAN_INCOMING_=FALSE R CMD check \
      --no-stop-on-test-error \
      --as-cran \
      *.tar.gz
  displayName: 'Check package'

- bash: |
    cd ..
    cat *.Rcheck/00check.log
    cat *.Rcheck/00install.out
  condition: always()
  displayName: 'Output the package check log'

# Run static code analysis
- bash: |
    sudo dnf -y install R-lintr
    Rscript \
      -e "library(lintr)" \
      -e "l <- lint_package(linters = with_defaults(object_name_linter = NULL, object_usage_linter = NULL))" \
      -e "print(l)" \
      -e "quit(save = 'no', status = length(l) > 0)"
  displayName: 'Static code analysis'

# Run code coverage. To publish the code coverage, the two tasks below are also required.
- bash: |
    Rscript \
      -e "install.packages('covr')" \
      -e "covr::azure()"
  displayName: 'Code coverage'

- task: DotNetCoreInstaller@0
  inputs:
    packageType: sdk
    version: 2.2.207
    installationPath: $(Agent.ToolsDirectory)/dotnet
  displayName: "Install dotnet core"

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: 'coverage.xml'